{"name":"Sharedsqlite","tagline":"A Sqlite class library implementation of the android 'SharedPreferences' object","body":"### Sharedsqlite.\r\nHandling persistent data in android can sometimes be a headache especially when you only want to\r\nStore a single row (that of course you wish to use time and again later on),\r\nThe system provides a [SharedPreferences](http://developer.android.com/reference/android/content/SharedPreferences.html)\r\nObject however then you will have to create it as a private file, and read it in a private mode or use the default one? \r\n\r\n### Introducing - Sharedsqlite!\r\nSharedsqlite is a simple thread-safe database with a single table with a key-value schema where you can save your\r\n(Mainly) primitive data types that suites nowhere else excluding the headache of messing around with committing and reading \r\nFrom the sharedPreferences.\r\n\r\n### Jar File\r\nJar file can be downloaded right [here](https://github.com/Jhonnyc/SharedSqlite/raw/master/SharedSqlite/SharedSqlite.jar)\r\nJust add the jar to your project 'libs' folder and you're good to go.\r\n\r\n### Usage \r\nWriting and reading the data is only a one line code.\r\nFirst create a new instance by calling - \r\n`SharedSqlite.initialize(getApplicationContext());`\r\n\r\nAnd now you are free to call -\r\n`SharedSqlite.getInstance().addValue(key, value)`\r\nWherever you want in your code in order to write the key-value pair to the database\r\nWhen key and value can be any primitive data type or an enumerator (it will turn in to String value in runtime)\r\n\r\nIn order to read the data later on you can call any of the -\r\n* `SharedSqlite.getInstance().getBooleanValue(Key, DefaultValue);` - To read a boolean value or the dfault value provided in case there is no mapping for the supplied key.\r\n\r\n* `SharedSqlite.getInstance().getIntValue(Key, DefaultValue);` - To read a int value or the dfault value provided in case there is no mapping for the supplied key.\r\n\r\n* `SharedSqlite.getInstance().getDoubleValue(Key, DefaultValue);` - To read a double value or the dfault value provided in case there is no mapping for the supplied key.\r\n\r\n* `SharedSqlite.getInstance().getFloatValue(Key, DefaultValue);` - To read a float value or the dfault value provided in case there is no mapping for the supplied key.\r\n\r\n* `SharedSqlite.getInstance().getStringValue(Key, DefaultValue);` - To read a String value or the dfault value provided in case there is no mapping for the supplied key.\r\n\r\n* `SharedSqlite.getInstance().getLongValue(Key, DefaultValue);` - To read a long value or the dfault value provided in case there is no mapping for the supplied key.","google":"UA-64565166-1","note":"Don't delete this file! It's used internally to help with page regeneration."}